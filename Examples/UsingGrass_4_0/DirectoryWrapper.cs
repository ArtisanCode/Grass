//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtisanCode.UsingGrass
{
    using Microsoft.Win32.SafeHandles;
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.IO;
    using System.Security.AccessControl;
    
    
    [GeneratedCode("0.0.0.1", "ArtisanCode.Grass")]
    public partial class DirectoryWrapper : object, IDirectory
    {
        
        public virtual System.IO.DirectoryInfo CreateDirectory(string path)
        {
            return Directory.CreateDirectory(path);
        }
        
        public virtual System.IO.DirectoryInfo CreateDirectory(string path, System.Security.AccessControl.DirectorySecurity directorySecurity)
        {
            return Directory.CreateDirectory(path, directorySecurity);
        }
        
        public virtual void Delete(string path)
        {
            Directory.Delete(path);
        }
        
        public virtual void Delete(string path, bool recursive)
        {
            Directory.Delete(path, recursive);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateDirectories(string path)
        {
            return Directory.EnumerateDirectories(path);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateDirectories(string path, string searchPattern)
        {
            return Directory.EnumerateDirectories(path, searchPattern);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateDirectories(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.EnumerateDirectories(path, searchPattern, searchOption);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFiles(string path)
        {
            return Directory.EnumerateFiles(path);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFiles(string path, string searchPattern)
        {
            return Directory.EnumerateFiles(path, searchPattern);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFiles(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.EnumerateFiles(path, searchPattern, searchOption);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFileSystemEntries(string path)
        {
            return Directory.EnumerateFileSystemEntries(path);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern)
        {
            return Directory.EnumerateFileSystemEntries(path, searchPattern);
        }
        
        public virtual System.Collections.Generic.IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.EnumerateFileSystemEntries(path, searchPattern, searchOption);
        }
        
        public virtual bool Exists(string path)
        {
            return Directory.Exists(path);
        }
        
        public virtual System.Security.AccessControl.DirectorySecurity GetAccessControl(string path)
        {
            return Directory.GetAccessControl(path);
        }
        
        public virtual System.Security.AccessControl.DirectorySecurity GetAccessControl(string path, System.Security.AccessControl.AccessControlSections includeSections)
        {
            return Directory.GetAccessControl(path, includeSections);
        }
        
        public virtual System.DateTime GetCreationTime(string path)
        {
            return Directory.GetCreationTime(path);
        }
        
        public virtual System.DateTime GetCreationTimeUtc(string path)
        {
            return Directory.GetCreationTimeUtc(path);
        }
        
        public virtual string GetCurrentDirectory()
        {
            return Directory.GetCurrentDirectory();
        }
        
        public virtual string[] GetDirectories(string path)
        {
            return Directory.GetDirectories(path);
        }
        
        public virtual string[] GetDirectories(string path, string searchPattern)
        {
            return Directory.GetDirectories(path, searchPattern);
        }
        
        public virtual string[] GetDirectories(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.GetDirectories(path, searchPattern, searchOption);
        }
        
        public virtual string GetDirectoryRoot(string path)
        {
            return Directory.GetDirectoryRoot(path);
        }
        
        public virtual string[] GetFiles(string path)
        {
            return Directory.GetFiles(path);
        }
        
        public virtual string[] GetFiles(string path, string searchPattern)
        {
            return Directory.GetFiles(path, searchPattern);
        }
        
        public virtual string[] GetFiles(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.GetFiles(path, searchPattern, searchOption);
        }
        
        public virtual string[] GetFileSystemEntries(string path)
        {
            return Directory.GetFileSystemEntries(path);
        }
        
        public virtual string[] GetFileSystemEntries(string path, string searchPattern)
        {
            return Directory.GetFileSystemEntries(path, searchPattern);
        }
        
        public virtual string[] GetFileSystemEntries(string path, string searchPattern, System.IO.SearchOption searchOption)
        {
            return Directory.GetFileSystemEntries(path, searchPattern, searchOption);
        }
        
        public virtual System.DateTime GetLastAccessTime(string path)
        {
            return Directory.GetLastAccessTime(path);
        }
        
        public virtual System.DateTime GetLastAccessTimeUtc(string path)
        {
            return Directory.GetLastAccessTimeUtc(path);
        }
        
        public virtual System.DateTime GetLastWriteTime(string path)
        {
            return Directory.GetLastWriteTime(path);
        }
        
        public virtual System.DateTime GetLastWriteTimeUtc(string path)
        {
            return Directory.GetLastWriteTimeUtc(path);
        }
        
        public virtual string[] GetLogicalDrives()
        {
            return Directory.GetLogicalDrives();
        }
        
        public virtual System.IO.DirectoryInfo GetParent(string path)
        {
            return Directory.GetParent(path);
        }
        
        public virtual void Move(string sourceDirName, string destDirName)
        {
            Directory.Move(sourceDirName, destDirName);
        }
        
        public virtual void SetAccessControl(string path, System.Security.AccessControl.DirectorySecurity directorySecurity)
        {
            Directory.SetAccessControl(path, directorySecurity);
        }
        
        public virtual void SetCreationTime(string path, System.DateTime creationTime)
        {
            Directory.SetCreationTime(path, creationTime);
        }
        
        public virtual void SetCreationTimeUtc(string path, System.DateTime creationTimeUtc)
        {
            Directory.SetCreationTimeUtc(path, creationTimeUtc);
        }
        
        public virtual void SetCurrentDirectory(string path)
        {
            Directory.SetCurrentDirectory(path);
        }
        
        public virtual void SetLastAccessTime(string path, System.DateTime lastAccessTime)
        {
            Directory.SetLastAccessTime(path, lastAccessTime);
        }
        
        public virtual void SetLastAccessTimeUtc(string path, System.DateTime lastAccessTimeUtc)
        {
            Directory.SetLastAccessTimeUtc(path, lastAccessTimeUtc);
        }
        
        public virtual void SetLastWriteTime(string path, System.DateTime lastWriteTime)
        {
            Directory.SetLastWriteTime(path, lastWriteTime);
        }
        
        public virtual void SetLastWriteTimeUtc(string path, System.DateTime lastWriteTimeUtc)
        {
            Directory.SetLastWriteTimeUtc(path, lastWriteTimeUtc);
        }
    }
}
